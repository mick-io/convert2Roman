"use strict";
// Object.defineProperty(exports, "__esModule", { value: true });
var assert = require("assert");
var convert2Roman = require("./index");

assert.equal(convert2Roman(2), "II");
assert.equal(convert2Roman(3), "III");
assert.equal(convert2Roman(4), "IV");
assert.equal(convert2Roman(5), "V");
assert.equal(convert2Roman(9), "IX");
assert.equal(convert2Roman(12), "XII");
assert.equal(convert2Roman(16), "XVI");
assert.equal(convert2Roman(29), "XXIX");
assert.equal(convert2Roman(44), "XLIV");
assert.equal(convert2Roman(45), "XLV");
assert.equal(convert2Roman(68), "LXVIII");
assert.equal(convert2Roman(83), "LXXXIII");
assert.equal(convert2Roman(97), "XCVII");
assert.equal(convert2Roman(99), "XCIX");
assert.equal(convert2Roman(500), "D");
assert.equal(convert2Roman(501), "DI");
assert.equal(convert2Roman(649), "DCXLIX");
assert.equal(convert2Roman(798), "DCCXCVIII");
assert.equal(convert2Roman(891), "DCCCXCI");
assert.equal(convert2Roman(1000), "M");
assert.equal(convert2Roman(1004), "MIV");
assert.equal(convert2Roman(1006), "MVI");
assert.equal(convert2Roman(1023), "MXXIII");
assert.equal(convert2Roman(2014), "MMXIV");
assert.equal(convert2Roman(3999), "MMMCMXCIX");
assert.equal(convert2Roman("2"), "II");
assert.equal(convert2Roman("3"), "III");
assert.equal(convert2Roman("4"), "IV");
assert.equal(convert2Roman("5"), "V");
assert.equal(convert2Roman("9"), "IX");
assert.equal(convert2Roman("12"), "XII");
assert.equal(convert2Roman("16"), "XVI");
assert.equal(convert2Roman("29"), "XXIX");
assert.equal(convert2Roman("44"), "XLIV");
assert.equal(convert2Roman("45"), "XLV");
assert.equal(convert2Roman("68"), "LXVIII");
assert.equal(convert2Roman("83"), "LXXXIII");
assert.equal(convert2Roman("97"), "XCVII");
assert.equal(convert2Roman("99"), "XCIX");
assert.equal(convert2Roman("500"), "D");
assert.equal(convert2Roman("501"), "DI");
assert.equal(convert2Roman("649"), "DCXLIX");
assert.equal(convert2Roman("798"), "DCCXCVIII");
assert.equal(convert2Roman("891"), "DCCCXCI");
assert.equal(convert2Roman("1000"), "M");
assert.equal(convert2Roman("1004"), "MIV");
assert.equal(convert2Roman("1006"), "MVI");
assert.equal(convert2Roman("1023"), "MXXIII");
assert.equal(convert2Roman("2014"), "MMXIV");
assert.equal(convert2Roman("3999"), "MMMCMXCIX");
assert.equal(convert2Roman(2.4), "II");
assert.equal(convert2Roman(3.4), "III");
assert.equal(convert2Roman(4.4), "IV");
assert.equal(convert2Roman(5.4), "V");
assert.equal(convert2Roman(9.4), "IX");
assert.equal(convert2Roman(12.4), "XII");
assert.equal(convert2Roman(16.4), "XVI");
assert.equal(convert2Roman(29.4), "XXIX");
assert.equal(convert2Roman(44.4), "XLIV");
assert.equal(convert2Roman(45.4), "XLV");
assert.equal(convert2Roman(68.4), "LXVIII");
assert.equal(convert2Roman(83.4), "LXXXIII");
assert.equal(convert2Roman(97.4), "XCVII");
assert.equal(convert2Roman(99.4), "XCIX");
assert.equal(convert2Roman(500.4), "D");
assert.equal(convert2Roman(501.4), "DI");
assert.equal(convert2Roman(649.4), "DCXLIX");
assert.equal(convert2Roman(798.4), "DCCXCVIII");
assert.equal(convert2Roman(891.4), "DCCCXCI");
assert.equal(convert2Roman(1000.4), "M");
assert.equal(convert2Roman(1004.4), "MIV");
assert.equal(convert2Roman(1006.4), "MVI");
assert.equal(convert2Roman(1023.4), "MXXIII");
assert.equal(convert2Roman(2014.4), "MMXIV");
assert.equal(convert2Roman(3999.4), "MMMCMXCIX");
assert.equal(convert2Roman("2.4"), "II");
assert.equal(convert2Roman("3.4"), "III");
assert.equal(convert2Roman("4.4"), "IV");
assert.equal(convert2Roman("5.4"), "V");
assert.equal(convert2Roman("9.4"), "IX");
assert.equal(convert2Roman("12.4"), "XII");
assert.equal(convert2Roman("16.4"), "XVI");
assert.equal(convert2Roman("29.4"), "XXIX");
assert.equal(convert2Roman("44.4"), "XLIV");
assert.equal(convert2Roman("45.4"), "XLV");
assert.equal(convert2Roman("68.4"), "LXVIII");
assert.equal(convert2Roman("83.4"), "LXXXIII");
assert.equal(convert2Roman("97.4"), "XCVII");
assert.equal(convert2Roman("99.4"), "XCIX");
assert.equal(convert2Roman("500.4"), "D");
assert.equal(convert2Roman("501.4"), "DI");
assert.equal(convert2Roman("649.4"), "DCXLIX");
assert.equal(convert2Roman("798.4"), "DCCXCVIII");
assert.equal(convert2Roman("891.4"), "DCCCXCI");
assert.equal(convert2Roman("1000.4"), "M");
assert.equal(convert2Roman("1004.4"), "MIV");
assert.equal(convert2Roman("1006.4"), "MVI");
assert.equal(convert2Roman("1023.4"), "MXXIII");
assert.equal(convert2Roman("2014.4"), "MMXIV");
assert.equal(convert2Roman("3999.4"), "MMMCMXCIX");
assert.equal(convert2Roman(-2), "II");
assert.equal(convert2Roman(-3), "III");
assert.equal(convert2Roman(-4), "IV");
assert.equal(convert2Roman(-5), "V");
assert.equal(convert2Roman(-9), "IX");
assert.equal(convert2Roman(-12), "XII");
assert.equal(convert2Roman(-16), "XVI");
assert.equal(convert2Roman(-29), "XXIX");
assert.equal(convert2Roman(-44), "XLIV");
assert.equal(convert2Roman(-45), "XLV");
assert.equal(convert2Roman(-68), "LXVIII");
assert.equal(convert2Roman(-83), "LXXXIII");
assert.equal(convert2Roman(-97), "XCVII");
assert.equal(convert2Roman(-99), "XCIX");
assert.equal(convert2Roman(-500), "D");
assert.equal(convert2Roman(-501), "DI");
assert.equal(convert2Roman(-649), "DCXLIX");
assert.equal(convert2Roman(-798), "DCCXCVIII");
assert.equal(convert2Roman(-891), "DCCCXCI");
assert.equal(convert2Roman(-1000), "M");
assert.equal(convert2Roman(-1004), "MIV");
assert.equal(convert2Roman(-1006), "MVI");
assert.equal(convert2Roman(-1023), "MXXIII");
assert.equal(convert2Roman(-2014), "MMXIV");
assert.equal(convert2Roman(-3999), "MMMCMXCIX");
assert.equal(convert2Roman("-2"), "II");
assert.equal(convert2Roman("-3"), "III");
assert.equal(convert2Roman("-4"), "IV");
assert.equal(convert2Roman("-5"), "V");
assert.equal(convert2Roman("-9"), "IX");
assert.equal(convert2Roman("-12"), "XII");
assert.equal(convert2Roman("-16"), "XVI");
assert.equal(convert2Roman("-29"), "XXIX");
assert.equal(convert2Roman("-44"), "XLIV");
assert.equal(convert2Roman("-45"), "XLV");
assert.equal(convert2Roman("-68"), "LXVIII");
assert.equal(convert2Roman("-83"), "LXXXIII");
assert.equal(convert2Roman("-97"), "XCVII");
assert.equal(convert2Roman("-99"), "XCIX");
assert.equal(convert2Roman("-500"), "D");
assert.equal(convert2Roman("-501"), "DI");
assert.equal(convert2Roman("-649"), "DCXLIX");
assert.equal(convert2Roman("-798"), "DCCXCVIII");
assert.equal(convert2Roman("-891"), "DCCCXCI");
assert.equal(convert2Roman("-1000"), "M");
assert.equal(convert2Roman("-1004"), "MIV");
assert.equal(convert2Roman("-1006"), "MVI");
assert.equal(convert2Roman("-1023"), "MXXIII");
assert.equal(convert2Roman("-2014"), "MMXIV");
assert.equal(convert2Roman("-3999"), "MMMCMXCIX");
assert.equal(convert2Roman(0), "");
assert.equal(convert2Roman("0"), "");
